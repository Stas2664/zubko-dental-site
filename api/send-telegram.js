// Vercel API Route –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
module.exports = async function handler(req, res) {
  // –†–∞–∑—Ä–µ—à–∞–µ–º CORS –¥–ª—è –≤—Å–µ—Ö –¥–æ–º–µ–Ω–æ–≤
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'POST, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');

  // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º OPTIONS –∑–∞–ø—Ä–æ—Å (preflight)
  if (req.method === 'OPTIONS') {
    return res.status(200).end();
  }

  // –ü—Ä–∏–Ω–∏–º–∞–µ–º —Ç–æ–ª—å–∫–æ POST –∑–∞–ø—Ä–æ—Å—ã
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method Not Allowed' });
  }

  try {
    const data = req.body;
    
    if (!data || !data.name || !data.phone) {
      return res.status(400).json({ error: 'Missing required fields' });
    }

    // Chat ID —Ç–≤–æ–µ–π –≥—Ä—É–ø–ø—ã "–°–∞–π—Ç –°—Ç–æ–º–∞—Ç–æ–ª–æ–≥"
    const botToken = '7535946322:AAGpiSvEsyBWama9QC-ydaRAF7Y94yutoc8';
    const chatId = '-1002827782723';

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    const message = `ü¶∑ *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞*

üë§ *–ò–º—è:* ${data.name}
üéÇ *–í–æ–∑—Ä–∞—Å—Ç:* ${data.age} –ª–µ—Ç
üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* ${data.phone}
ü©∫ *–ñ–∞–ª–æ–±—ã:* ${data.complaints}

‚è∞ *–í—Ä–µ–º—è:* ${new Date().toLocaleString('ru-RU', {
      timeZone: 'Europe/Moscow',
      year: 'numeric',
      month: '2-digit',
      day: '2-digit',
      hour: '2-digit',
      minute: '2-digit',
      second: '2-digit'
    })}`;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
    const telegramResponse = await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: chatId,
        text: message,
        parse_mode: 'Markdown'
      })
    });

    if (telegramResponse.ok) {
      return res.status(200).json({ 
        success: true, 
        message: '–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ Telegram!' 
      });
    } else {
      const error = await telegramResponse.text();
      console.error('Telegram API Error:', error);
      return res.status(500).json({ 
        error: '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram',
        details: error 
      });
    }

  } catch (error) {
    console.error('Server Error:', error);
    return res.status(500).json({ 
      error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞',
      details: error.message 
    });
  }
}
